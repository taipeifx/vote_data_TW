shiny::runApp('ShinyRProj')
runApp('ShinyRProj')
#Map of Taiwan
taiwan_shp <- readShapePoly("TWN_adm2.shp")
library(rgeos) #rgeos before maptools to turn gpclibPermitStatus() to true
library(maptools)
library(ggplot2) #to use fortify()
library(plyr) #to use join
#Map of Taiwan
taiwan_shp <- readShapePoly("TWN_adm2.shp")
#readOGR
#tw = readOGR(dsn=".", layer="TWN_adm2") #Large SpatialPolygonsDataFrame, same as taiwan_shp = readShapePoly("TWN_adm2.shp")
#taiwan.points = fortify(tw, region="id")
taiwan_shp@data$id = rownames(taiwan_shp@data) #added id to taiwan_shp@data [1] "0":"21"
library(rgdal) #to use readOGR
#Map of Taiwan
taiwan_shp <- readShapePoly("TWN_adm2.shp")
library(maptools)
#Map of Taiwan
taiwan_shp <- readShapePoly("TWN_adm2.shp")
install.packages("maptools")
install.packages("maptools")
libary(maptools)
library(maptools)
#Map of Taiwan
taiwan_shp <- readShapePoly("TWN_adm2.shp")
setwd("D:/NYCDSA/Taiwan Maps")
#Map of Taiwan
taiwan_shp <- readShapePoly("TWN_adm2.shp")
#readOGR
#tw = readOGR(dsn=".", layer="TWN_adm2") #Large SpatialPolygonsDataFrame, same as taiwan_shp = readShapePoly("TWN_adm2.shp")
#taiwan.points = fortify(tw, region="id")
taiwan_shp@data$id = rownames(taiwan_shp@data) #added id to taiwan_shp@data [1] "0":"21"
taiwan.points = fortify(taiwan_shp, region="id") #ggplot2
taiwan_map1 = join(taiwan.points, taiwan_shp@data, by="id") #plyr, try to attach NAME_2 to this to call it when plotting
library(rgeos) #rgeos before maptools to turn gpclibPermitStatus() to true
library(maptools)
library(ggplot2) #to use fortify()
library(rgdal) #to use readOGR
library(plyr) #to use join
#Map of Taiwan
taiwan_shp <- readShapePoly("TWN_adm2.shp")
taiwan_shp@data$id = rownames(taiwan_shp@data) #added id to taiwan_shp@data [1] "0":"21"
taiwan.points = fortify(taiwan_shp, region="id") #ggplot2
taiwan_map1 = join(taiwan.points, taiwan_shp@data, by="id") #plyr, try to attach NAME_2 to this to call it when plotting
centroids.df = as.data.frame(coordinates(taiwan_shp))
names(centroids.df) = c("Longitude", "Latitude") #more sensible column names
centroids.df$id = taiwan_shp@data$id #rownames(taiwan_shp@data)
taiwan_map2 = join(taiwan_map1, centroids.df, by="id")
#labels repeat and are labelled for each one there is. time consuming and ugly
tw_label = data.frame(newlabel = unique(taiwan_map2$NAME_2),
newlong = unique(taiwan_map2$Longitude),
newlat = unique(taiwan_map2$Latitude))
taiwan_map3 <- rbind.fill(taiwan_map2, tw_label)
i = ggplot(taiwan_map3, aes(x=long, y=lat, group=group)) + geom_path()
zoom = coord_cartesian(xlim = c(119, 122.5), ylim = c(21.5, 25.5))
tw_labels = geom_text(aes(label = newlabel, x = newlong, y = newlat))
tw = i +
zoom +
geom_polygon(aes(fill = NAME_2), color = "black") +
tw_labels +
labs(title = "Taiwan")
tw
shiny::runApp('D:/NYCDSA/Project 1 - R Shiny/ShinyRProj')
cat('\014') #clears console
rm(list = ls()) #removes global environment
setwd("D:/NYCDSA/Project 1 - R Shiny/ShinyRProj")
setwd("D:/NYCDSA/Project 1 - R Shiny/ShinyRProj/9任總統")
elbase_nine = read.csv("elbase")
elbase_nine = read.csv("elbase.csv")
elbase_nine = read.csv("elbase.csv", header = F, stringsAsFactors = F)
elbase_nine = read.table("elbase.csv", header = F, stringsAsFactors = F)
View(elbase_nine)
View(elbase_nine)
elbase_nine = read.table("elbase.csv", header = F, sep = ",", stringsAsFactors = F)
elbase_nine = read.table("elbase.csv", header = T, sep = ",", stringsAsFactors = F)
elbase_nine = read.table("elbase.csv", header = T, sep = ",", stringsAsFactors = F)
elbase_nine = read.table("elbase.csv", header = F, sep = ",", stringsAsFactors = F)
elbase_nine = read.table("elbase.csv", encoding="UTF-8", header = F, sep = ",", stringsAsFactors = F)
elbase_nine = read.table("elbase.csv", encoding="UTF-8", header = F, stringsAsFactors = F)
elbase_nine = read("elbase.csv", encoding="UTF-8", header = F, stringsAsFactors = F)
elbase_nine = read.table("elbase.txt", encoding="UTF-8", header = F, sep = ",", stringsAsFactors = F)
setwd("D:/NYCDSA/Project 1 - R Shiny/ShinyRProj/9任總統")
elbase_nine = read.table("elbase.txt", encoding="UTF-8", header = F, sep = ",", stringsAsFactors = F)
elbase_nine = read.table("elbase_nine.txt", encoding="UTF-8", header = F, sep = ",", stringsAsFactors = F)
elbase_nine = read.table("elbase_nine.txt", encoding="UTF-8", header = F, stringsAsFactors = F)
View(elbase_nine)
elbase_nine = read.table("elbase_nine.txt", encoding="UTF-8", header = F, sep = ",", stringsAsFactors = F)
elbase_nine = read.csv("elbase_nine.txt", encoding="UTF-8", header = F, sep = ",", stringsAsFactors = F)
elbase_nine = read.table("elbase_nine.txt", encoding="UTF-8", header = F, sep = ",", stringsAsFactors = F)
cat('\014') #clears console
rm(list = ls()) #removes global environment
elbase_nine = read.table("elbase_nine.txt", encoding="UTF-8", header = F, sep = ",", stringsAsFactors = F)
elbase_nine = read.delim("elbase_nine.txt", encoding="UTF-8")
View(elbase_nine)
elbase_nine[20]
elbase_nine[20,]
elbase_nine[1,]
elbase_nine = read.table("elbase_nine.txt", encoding="UTF-8", header = F, sep = ",", stringsAsFactors = F)
View(elbase_nine)
list(elbase_nine)
cat('\014') #clears console
elbase_nine = read.table("elbase_nine.txt", encoding="UTF-8", header = F, sep = "/n", stringsAsFactors = F)
elbase_nine = read.table("elbase_nine.txt", encoding="UTF-8", header = F, sep = ",", stringsAsFactors = F)
elbase_nine = read.table("elbase_nine.txt", encoding="UTF-8", header = F, sep = "/", stringsAsFactors = F)
View(elbase_nine)
elbase_nine = read.table("elbase_nine.txt", encoding="UTF-8", header = F, sep = "n", stringsAsFactors = F)
elbase_nine = read.table("elbase_nine.txt", encoding="UTF-8", header = F, sep = "/", stringsAsFactors = F)
as.table(elbase_nine)
elcand_nine = read.csv("elbase_nine.csv", encoding="UTF-8", header = F, stringsAsFactors = F)
elcand_nine = read.csv("elcand_nine.csv", encoding="UTF-8", header = F, stringsAsFactors = F)
elcand_nine = read.csv("elcand_nine", encoding="UTF-8", header = F, stringsAsFactors = F)
elcand_nine = read.csv("elcand_nine.csv", encoding="UTF-8", header = F, stringsAsFactors = F)
elcand_nine = read.csv("elcand.csv", encoding="UTF-8", header = F, stringsAsFactors = F)
elcand_nine = read.csv("elcand", encoding="UTF-8", header = F, stringsAsFactors = F)
setwd("D:/NYCDSA/Project 1 - R Shiny/ShinyRProj/9任總統")
elcand_nine = read.csv("elcand", encoding="UTF-8", header = F, stringsAsFactors = F)
elcand_nine = read.csv("elcand", encoding="UTF-8", header = F, stringsAsFactors = F)
elcand_nine = read.csv("elcand.csv", encoding="UTF-8", header = F, stringsAsFactors = F)
elcand_nine = read.table("elcand.csv", encoding="UTF-8", header = F, stringsAsFactors = F)
elcand_nine = read.table("elcand.csv", encoding="UTF-8", sep = ",", header = F, stringsAsFactors = F)
elcand_nine = read.delim("elcand_nine.txt", encoding="UTF-8", sep = ",", header = F, stringsAsFactors = F)
elcand_nine = read.delim("elcand_nine.txt", encoding="UTF-8")
View(elcand_nine)
elcand_nine = read.delim("elcand_nine.txt", encoding="UTF-8", header = F)
elcand_nine = read.delim("elcand_nine.txt", encoding="UTF-8", header = F, sep = ",")
